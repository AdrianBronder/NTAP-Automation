#!/usr/bin/env ansible-playbook

################################################################################
#
# Title:        20_create_pri_svm_all.yml 
# Author:       Adrian Bronder
# Date:         2020-06-19
# Description:  Create primary SVM in existing cluster (end-to-end)
#               with Ansible modules
#
# URLs:         http://docs.netapp.com/ontap-9/index.jsp
#               https://galaxy.ansible.com/netapp/ontap
#
################################################################################

- hosts: localhost
  gather_facts: false
  vars:
    input: &input
      hostname:       "{{ PRI_CLU }}"
      username:       "{{ PRI_CLU_USER }}"
      password:       "{{ PRI_CLU_PASS }}"
      https:          true
      validate_certs: false
# root_volume_aggregate currently not supported with REST
#      use_rest:       Always
  vars_files:
    - ../global.vars
  collections:
    - netapp.ontap

  tasks:
  - name: Create primary SVM
    na_ontap_svm:
      state:                 present
      name:                  "{{ PRI_SVM }}"
      root_volume_aggregate: "{{ PRI_AGGR }}"
      comment:               Created with Ansible
      <<: *input

  - name: Create management interface on primary SVM
    na_ontap_interface:
      state:                 present
      interface_name:        "{{ PRI_SVM }}"
      vserver:               "{{ PRI_SVM }}"
      address:               "{{ PRI_SVM_IP }}"
      netmask:               "{{ PRI_SVM_NETMASK }}"
      home_node:             "{{ PRI_CLU_NODE1 }}"
      home_port:             "{{ PRI_MGMT_PORT }}"
      service_policy:        default-management
      role:                  data
      <<: *input

  - name: Create DNS on primary SVM
    na_ontap_dns:
      state:                 present
      vserver:               "{{ PRI_SVM }}"
      domains:               "{{ PRI_DOMAIN }}"
      nameservers:           "{{ PRI_DNS1 }}"
      <<: *input

  - name: Create CIFS interface on primary SVM
    na_ontap_interface:
      state:                 present
      interface_name:        "{{ PRI_SVM }}_cifs_01"
      vserver:               "{{ PRI_SVM }}"
      address:               "{{ PRI_SVM_CIFS_IP }}"
      netmask:               "{{ PRI_SVM_CIFS_NETMASK }}"
      home_node:             "{{ PRI_CLU_NODE1 }}"
      home_port:             "{{ PRI_DATA_PORT }}"
      role:                  data
      protocols:             cifs
      <<: *input

  - name: Create NFS interface on primary SVM
    na_ontap_interface:
      state:                 present
      interface_name:        "{{ PRI_SVM }}_nfs_01"
      vserver:               "{{ PRI_SVM }}"
      address:               "{{ PRI_SVM_NFS_IP }}"
      netmask:               "{{ PRI_SVM_NFS_NETMASK }}"
      home_node:             "{{ PRI_CLU_NODE1 }}"
      home_port:             "{{ PRI_DATA_PORT }}"
      role:                  data
      protocols:             nfs
      <<: *input

  - name: Create 1st iSCSI interface for primary SVM
    na_ontap_interface:
      state:                 present
      interface_name:        "{{ PRI_SVM }}_iscsi_01"
      vserver:               "{{ PRI_SVM }}"
      address:               "{{ PRI_SVM_ISCSI1_IP }}"
      netmask:               "{{ PRI_SVM_ISCSI_NETMASK }}"
      home_node:             "{{ PRI_CLU_NODE1 }}"
      home_port:             "{{ PRI_DATA_PORT }}"
      protocols:             iscsi
      role:                  data
      <<: *input

  - name: Create 2nd iSCSI interface for primary SVM
    na_ontap_interface:
      state:                 present
      interface_name:        "{{ PRI_SVM }}_iscsi_02"
      vserver:               "{{ PRI_SVM }}"
      address:               "{{ PRI_SVM_ISCSI2_IP }}"
      netmask:               "{{ PRI_SVM_ISCSI_NETMASK }}"
      home_node:             "{{ PRI_CLU_NODE2 }}"
      home_port:             "{{ PRI_DATA_PORT }}"
      protocols:             iscsi
      role:                  data
      <<: *input

  - name: Create CIFS server on primary SVM
    na_ontap_cifs_server:
      state:                 present
      service_state:         started
      name:                  "{{ PRI_SVM }}"
      vserver:               "{{ PRI_SVM }}"
      domain:                "{{ PRI_AD_DOMAIN }}"
      admin_user_name:       "{{ PRI_AD_USER }}"
      admin_password:        "{{ PRI_AD_PASS }}"
      <<: *input

  - name: Create NFS server on primary SVM
    na_ontap_nfs:
      state:                 present
      vserver:               "{{ PRI_SVM }}"
      nfsv3:                 enabled
      nfsv4:                 disabled
      nfsv41:                disabled
      <<: *input

  - name: Create iSCSI service on primary SVM
    na_ontap_iscsi:
      state:                 present
      vserver:               "{{ PRI_SVM }}"
      service_state:         started
      <<: *input
