#!/usr/bin/env ansible-playbook

################################################################################
#
# Title:        05_check_cluster.yml
# Author:       Adrian Bronder
# Date:         2021-02-03
# Description:  Run a series of check routines against a cluster
#               with Ansible modules
#
# Modules:      na_ontap_info
#               assert (ansible.builtin)
#
# URLs:         http://docs.netapp.com/ontap-9/index.jsp
#               https://galaxy.ansible.com/netapp/ontap
#
# Built-in help:
# ansible-doc netapp.ontap.na_ontap_info
#
################################################################################

- hosts: localhost
  gather_facts: false
  vars:
    input: &input
      hostname:       "{{ PRI_CLU }}"
      username:       "{{ PRI_CLU_USER }}"
      password:       "{{ PRI_CLU_PASS }}"
      https:          true
      validate_certs: false
  vars_files:
    - ../global.vars
  collections:
    - netapp.ontap

  tasks:
  - name: Get Ontap Info
    na_ontap_info:
      gather_subset:
        - subsys_health_info
        - aggregate_info
      <<: *input
    register: netapp

  - name: Check Subsystem Health Status
    ansible.builtin.assert:
      that:
        - item.value.health == "ok"
      fail_msg: "{{ item.key }} is not healthy"
      success_msg: "{{ item.key }} is ok"
    loop:
      "{{ lookup('dict', netapp.ontap_info.subsys_health_info) }}"
    loop_control:
      label: "{{ item.key }}"
#    ignore_errors: yes

  - name: Check for Offline Aggregates
    ansible.builtin.assert:
      that:
        - item.value.aggr_raid_attributes.state == "online"
      fail_msg: "{{ item.key }} is offline"
      success_msg: "{{ item.key }} is online"
    loop:
      "{{ lookup('dict', netapp.ontap_info.aggregate_info) }}"
    loop_control:
      label: "{{ item.key }}"
#    ignore_errors: yes

  - name: Check for Root Aggregate Naming
    ansible.builtin.assert:
      that:
        - item.key | regex_search('^aggr0_{{ item.value.aggr_ownership_attributes.cluster }}_.*$') 
      fail_msg: "{{ item.key }} is not compliant with naming rules"
      success_msg: "{{ item.key }} is compliant with naming rules"
    when:
      - item.value.aggr_raid_attributes.is_root_aggregate == "true"
    loop:
      "{{ lookup('dict', netapp.ontap_info.aggregate_info) }}"
    loop_control:
      label: "{{ item.key }}"
#    ignore_errors: yes
